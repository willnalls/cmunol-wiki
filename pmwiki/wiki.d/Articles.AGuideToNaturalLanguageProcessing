version=pmwiki-2.2.130 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36
author=saumyaB
charset=UTF-8
csum=
ctime=1617555568
host=128.237.82.1
name=Articles.AGuideToNaturalLanguageProcessing
rev=7
targets=GradebookArticles.AGuideToNaturalLanguageProcessing,Articles.AGuideToNaturalLanguageProcessing,Category.Varia
text=(:if authgroup @tas:)%0a%0a(:toggle id=gi show="show grading interface" hide="hide grading interface":)%0a%0a>>id=gi%3c%3c%0a%0a[[GradebookArticles.{$Name}|See article in gradebook]] \\%0a[[{$FullName}?action=diff|See all changes to article]]%0a%0a(:foxform Site.FoxForms#gradeitem:)%0a%0a(:foxform Site.FoxForms#gradingcomment:)%0a%0a>>%3c%3c%0a%0a----%0a%0a(:ifend:)%0a%0a[[!Varia]]%0a%0a!A Guide to Natural Language Processing %0a%0a:Author: roochis%0a%0a'''Summary:''' \\%0a%0a[[#summary]]%0a%0aA short guide on how computers can "understand" the meaning of text %0a%0a[[#summaryends]]%0a%0a----%0a[[#content]]%0a%0a%0aNatural Language Processing is defined as a “subfield of Computer Science and Artificial Intelligence concerned with the interactions between computers and human language, in particular how to program computers to process and analyze large amounts of natural language data”. By using Natural Language Processing, computers are able to “understand” and categorize human text and audio. The meaning can be extracted from a sentence after it goes through various layers of analysis. In order these stages of analysis are: morphology, syntax, semantics, and pragmatics. %0a%0aIn order to crack the meaning of a sentence, we must first understand the structure of the sentence and the words that compose it with morphology and syntax analysis. The morphological stage of analysis requires identifying morphemes like prefixes/suffixes, singularization/pluralization, inflection/lemmatization, and spell-checking. While morphological analysis is done at the word level, syntactical analysis is done at the sentence level. A common tool to help with this are parse trees: ordered trees used to represent the syntactic structure of a sentence. Parse trees can be broken up into two main categories: constituency-based and dependency-based. The main difference between the two is that constituency-based parse trees distinguish between terminal and non-terminal grammar while dependency-based parse trees do not. Non-terminals are similar to categories like “greeting, name, surname”, but terminals are what goes in those categories like “hi, John, Doe”. %0a%0aHere’s a picture to illustrate the difference between terminal and non-terminal! :) %0ahttps://i.stack.imgur.com/fsTgs.png%0a%0aAfter learning about sentence and word structure, we can begin to extract the meaning of a sentence with semantics and pragmatics. Some tasks that have to be performed in the semantic layer of analysis include Named-Entity Recognition (NER) and Relationship Extraction. NER aims to classify named entities into predefined categories such as person names, organizations, and locations. Relationship Extraction is about finding semantic similarity between words (i.e. car is related to road, bus, and driving). At the pragmatic level, we’re trying to comprehend the entire text. Some subfields of pragmatic analysis include topic modeling, summarization, questions and answering. %0a%0aSources: %0ahttps://towardsdatascience.com/linguistic-knowledge-in-natural-language-processing-332630f43ce1%0a%0ahttps://en.wikipedia.org/wiki/Parse_tree%0ahttps://en.wikipedia.org/wiki/Named-entity_recognition%0a%0ahttps://en.wikipedia.org/wiki/Natural_language_processing#:~:text=Natural%2520language%2520processing%2520(NLP)%2520is,amounts%2520of%2520natural%2520language%2520data.%0a%0a%0a%0a[[#contentends]]%0a----%0a----%0a%0a!!Expansions:%0a[[#expansions]]%0a#foxbegin 210507-173648-900280#%0a(:div1 class=expansionhead:)%0a!!!LSTM's  %0a-> - Gavin_D%0a(:div1end:) %0a>>messageitem%3c%3c %0aFor those looking for a deep dive into deep learning pertaining to linguistics, I'd recommend researching Recurrent Neural Networks & Long Short-term neural networks. Without getting too technical, both are effectively different ways of better accounting for context in sentences, rather than looking at each word that comprises a sentence in isolation.%0a%0aTake, for example, the sentences "Time flies like an arrow" and "Fruit flies like a banana". Flies takes on 2 very different meanings here which our human brains easily decipher, but which a computer would struggle immensely to.%0a%0aRNN's and LSTM's don't simply look at the word flies on it's own, but rather also the words around it. You can perhaps imagine that with a larger dataset comprised of thousands of examples, a network would be better able to tell when flies refers to an animal or an action. The example given is purposefully very difficult, but consider "Flies swarmed around the zebra" vs. "The bird flies south". Here, the context makes it much more clear which is a verb and which is a noun.%0a%0ahttps://towardsdatascience.com/recurrent-neural-networks-deep-learning-for-nlp-37baa188aef5 %0a>>%3c%3c%0a#foxend 210507-173648-900280#%0a#foxbegin 210509-030854-23460#%0a(:div1 class=expansionhead:)%0a!!!NLP at CMU  %0a-> - sgangu%0a(:div1end:) %0a>>messageitem%3c%3c %0aSome of the most groundbreaking research in the field is actually being done at CMU. Specifically, Professor Lorraine Levin who I had the chance to speak with this semester does work on building language technologies for communities that do not already have them. To do this, she does not just use her knowledge of deep learning and NLP, but a deeper understanding of the phonological, morphological, and syntactical constructions behind the language. This is necessary because we typically don't have enough data to build language technologies using just DL techniques for languages that don't have them in the first place. Linguists have to use their understanding of the language in order to make this possible. This work may allow the speakers of these technologically poor languages to then have much greater access to the wealth of information we have on the internet and media. %0a%0ahttps://www.lti.cs.cmu.edu/people/15368/lorraine-levin%0a>>%3c%3c%0a#foxend 210509-030854-23460#%0a[[#expansionsend]]%0a%0a----%0a%25red%25 '''Add an expansion:'''%0a%0a(:if [ exists GradebookExpansions.{$Name}-{$Author} || equal {$Author} {$:Author} ] :)%0a%0a(:else:)%0a%0a(:foxform Site.FoxForms#newexpansion:)%0a%0a(:ifend:)%0a%0a----%0a----%0a%0a!!Comments%0a#foxbegin 210513-195445-170680#%0a(:div1 class=messagehead:)%0a>>rfloat%3c%3c   %0a[-13.05.2021 - 12:54-] &nbsp; %0a>>%3c%3c%0a(:if1 authgroup @tas:)%0a>>rfloat%3c%3c%0a{[foxdelrange button 210513-195445-170680 {$FullName} ]}%0a>>%3c%3c%0a(:if1end:)%0a!!!!!saumyaB%0a(:div1end:) %0a>>messageitem%3c%3c %0a'''Programming vs Natural Languages'''%0a>>messageitem%3c%3c%0aGoing off of Alex's comment, in my experience, CS is a lot of solving problems and developing algorithms and then translating those into specific languages. Each language has its own set of rules and "syntax," and some ideas/algorithms can be expressed better in certain languages than others. Very cool! %0a>>%3c%3c%0a#foxend 210513-195445-170680#%0a#foxbegin 210508-032858-978610#%0a(:div1 class=messagehead:)%0a>>rfloat%3c%3c   %0a[-07.05.2021 - 20:28-] &nbsp; %0a>>%3c%3c%0a(:if1 authgroup @tas:)%0a>>rfloat%3c%3c%0a{[foxdelrange button 210508-032858-978610 {$FullName} ]}%0a>>%3c%3c%0a(:if1end:)%0a!!!!!AlexX%0a(:div1end:) %0a>>messageitem%3c%3c %0a''''''%0a>>messageitem%3c%3c%0aI'm curious about to what extent programming languages are similar to natural languages. After all, both have a notion of a grammar and can be described according to a syntax tree structure, though I'm sure those of programming languages are much better-defined since they are manually designed and not naturally developed. %0a>>%3c%3c%0a#foxend 210508-032858-978610#%0a#foxbegin 210507-223618-383890#%0a(:div1 class=messagehead:)%0a>>rfloat%3c%3c   %0a[-07.05.2021 - 15:36-] &nbsp; %0a>>%3c%3c%0a(:if1 authgroup @tas:)%0a>>rfloat%3c%3c%0a{[foxdelrange button 210507-223618-383890 {$FullName} ]}%0a>>%3c%3c%0a(:if1end:)%0a!!!!!Connor_G%0a(:div1end:) %0a>>messageitem%3c%3c %0a''''''%0a>>messageitem%3c%3c%0aThere exist some sentences that are particularly difficult for natural language processing. It's known as the Winograd schema.%0a%0ahttps://www.youtube.com/watch?v=m3vIEKWrP9Q %0a>>%3c%3c%0a#foxend 210507-223618-383890#%0a#foxbegin 210430-185112-335430#%0a(:div1 class=messagehead:)%0a>>rfloat%3c%3c   %0a[-30.04.2021 - 11:51-] &nbsp; %0a>>%3c%3c%0a(:if1 authgroup @tas:)%0a>>rfloat%3c%3c%0a{[foxdelrange button 210430-185112-335430 {$FullName} ]}%0a>>%3c%3c%0a(:if1end:)%0a!!!!!MindeeL%0a(:div1end:) %0a>>messageitem%3c%3c %0a'''I wonder if regular expressions are also used in natural language processsing '''%0a>>messageitem%3c%3c%0a %0a>>%3c%3c%0a#foxend 210430-185112-335430#%0a%0a%0a%0a(:section: C:)%0a(:Category: Varia:)
time=1620935685
author:1620935685=saumyaB
diff:1620935685:1620529733:=106,123d105%0a%3c #foxbegin 210513-195445-170680#%0a%3c (:div1 class=messagehead:)%0a%3c >>rfloat%3c%3c   %0a%3c [-13.05.2021 - 12:54-] &nbsp; %0a%3c >>%3c%3c%0a%3c (:if1 authgroup @tas:)%0a%3c >>rfloat%3c%3c%0a%3c {[foxdelrange button 210513-195445-170680 {$FullName} ]}%0a%3c >>%3c%3c%0a%3c (:if1end:)%0a%3c !!!!!saumyaB%0a%3c (:div1end:) %0a%3c >>messageitem%3c%3c %0a%3c '''Programming vs Natural Languages'''%0a%3c >>messageitem%3c%3c%0a%3c Going off of Alex's comment, in my experience, CS is a lot of solving problems and developing algorithms and then translating those into specific languages. Each language has its own set of rules and "syntax," and some ideas/algorithms can be expressed better in certain languages than others. Very cool! %0a%3c >>%3c%3c%0a%3c #foxend 210513-195445-170680#%0a
host:1620935685=128.237.82.1
author:1620529733=sgangu
diff:1620529733:1620444538:=78,88d77%0a%3c #foxbegin 210509-030854-23460#%0a%3c (:div1 class=expansionhead:)%0a%3c !!!NLP at CMU  %0a%3c -> - sgangu%0a%3c (:div1end:) %0a%3c >>messageitem%3c%3c %0a%3c Some of the most groundbreaking research in the field is actually being done at CMU. Specifically, Professor Lorraine Levin who I had the chance to speak with this semester does work on building language technologies for communities that do not already have them. To do this, she does not just use her knowledge of deep learning and NLP, but a deeper understanding of the phonological, morphological, and syntactical constructions behind the language. This is necessary because we typically don't have enough data to build language technologies using just DL techniques for languages that don't have them in the first place. Linguists have to use their understanding of the language in order to make this possible. This work may allow the speakers of these technologically poor languages to then have much greater access to the wealth of information we have on the internet and media. %0a%3c %0a%3c https://www.lti.cs.cmu.edu/people/15368/lorraine-levin%0a%3c >>%3c%3c%0a%3c #foxend 210509-030854-23460#%0a
host:1620529733=173.224.102.108
author:1620444538=AlexX
diff:1620444538:1620426978:=95,112d94%0a%3c #foxbegin 210508-032858-978610#%0a%3c (:div1 class=messagehead:)%0a%3c >>rfloat%3c%3c   %0a%3c [-07.05.2021 - 20:28-] &nbsp; %0a%3c >>%3c%3c%0a%3c (:if1 authgroup @tas:)%0a%3c >>rfloat%3c%3c%0a%3c {[foxdelrange button 210508-032858-978610 {$FullName} ]}%0a%3c >>%3c%3c%0a%3c (:if1end:)%0a%3c !!!!!AlexX%0a%3c (:div1end:) %0a%3c >>messageitem%3c%3c %0a%3c ''''''%0a%3c >>messageitem%3c%3c%0a%3c I'm curious about to what extent programming languages are similar to natural languages. After all, both have a notion of a grammar and can be described according to a syntax tree structure, though I'm sure those of programming languages are much better-defined since they are manually designed and not naturally developed. %0a%3c >>%3c%3c%0a%3c #foxend 210508-032858-978610#%0a
host:1620444538=71.206.238.88
author:1620426978=Connor_G
diff:1620426978:1620409008:=95,114d94%0a%3c #foxbegin 210507-223618-383890#%0a%3c (:div1 class=messagehead:)%0a%3c >>rfloat%3c%3c   %0a%3c [-07.05.2021 - 15:36-] &nbsp; %0a%3c >>%3c%3c%0a%3c (:if1 authgroup @tas:)%0a%3c >>rfloat%3c%3c%0a%3c {[foxdelrange button 210507-223618-383890 {$FullName} ]}%0a%3c >>%3c%3c%0a%3c (:if1end:)%0a%3c !!!!!Connor_G%0a%3c (:div1end:) %0a%3c >>messageitem%3c%3c %0a%3c ''''''%0a%3c >>messageitem%3c%3c%0a%3c There exist some sentences that are particularly difficult for natural language processing. It's known as the Winograd schema.%0a%3c %0a%3c https://www.youtube.com/watch?v=m3vIEKWrP9Q %0a%3c >>%3c%3c%0a%3c #foxend 210507-223618-383890#%0a
host:1620426978=24.131.18.47
author:1620409008=Gavin_D
diff:1620409008:1619808672:=63,77c63%0a%3c #foxbegin 210507-173648-900280#%0a%3c (:div1 class=expansionhead:)%0a%3c !!!LSTM's  %0a%3c -> - Gavin_D%0a%3c (:div1end:) %0a%3c >>messageitem%3c%3c %0a%3c For those looking for a deep dive into deep learning pertaining to linguistics, I'd recommend researching Recurrent Neural Networks & Long Short-term neural networks. Without getting too technical, both are effectively different ways of better accounting for context in sentences, rather than looking at each word that comprises a sentence in isolation.%0a%3c %0a%3c Take, for example, the sentences "Time flies like an arrow" and "Fruit flies like a banana". Flies takes on 2 very different meanings here which our human brains easily decipher, but which a computer would struggle immensely to.%0a%3c %0a%3c RNN's and LSTM's don't simply look at the word flies on it's own, but rather also the words around it. You can perhaps imagine that with a larger dataset comprised of thousands of examples, a network would be better able to tell when flies refers to an animal or an action. The example given is purposefully very difficult, but consider "Flies swarmed around the zebra" vs. "The bird flies south". Here, the context makes it much more clear which is a verb and which is a noun.%0a%3c %0a%3c https://towardsdatascience.com/recurrent-neural-networks-deep-learning-for-nlp-37baa188aef5 %0a%3c >>%3c%3c%0a%3c #foxend 210507-173648-900280#%0a---%0a> %0a
host:1620409008=73.154.246.12
author:1619808672=MindeeL
diff:1619808672:1617555568:=81,98d80%0a%3c #foxbegin 210430-185112-335430#%0a%3c (:div1 class=messagehead:)%0a%3c >>rfloat%3c%3c   %0a%3c [-30.04.2021 - 11:51-] &nbsp; %0a%3c >>%3c%3c%0a%3c (:if1 authgroup @tas:)%0a%3c >>rfloat%3c%3c%0a%3c {[foxdelrange button 210430-185112-335430 {$FullName} ]}%0a%3c >>%3c%3c%0a%3c (:if1end:)%0a%3c !!!!!MindeeL%0a%3c (:div1end:) %0a%3c >>messageitem%3c%3c %0a%3c '''I wonder if regular expressions are also used in natural language processsing '''%0a%3c >>messageitem%3c%3c%0a%3c  %0a%3c >>%3c%3c%0a%3c #foxend 210430-185112-335430#%0a
host:1619808672=72.95.138.86
author:1617555568=roochis
diff:1617555568:1617555568:=1,85d0%0a%3c (:if authgroup @tas:)%0a%3c %0a%3c (:toggle id=gi show="show grading interface" hide="hide grading interface":)%0a%3c %0a%3c >>id=gi%3c%3c%0a%3c %0a%3c [[GradebookArticles.{$Name}|See article in gradebook]] \\%0a%3c [[{$FullName}?action=diff|See all changes to article]]%0a%3c %0a%3c (:foxform Site.FoxForms#gradeitem:)%0a%3c %0a%3c (:foxform Site.FoxForms#gradingcomment:)%0a%3c %0a%3c >>%3c%3c%0a%3c %0a%3c ----%0a%3c %0a%3c (:ifend:)%0a%3c %0a%3c [[!Varia]]%0a%3c %0a%3c !A Guide to Natural Language Processing %0a%3c %0a%3c :Author: roochis%0a%3c %0a%3c '''Summary:''' \\%0a%3c %0a%3c [[#summary]]%0a%3c %0a%3c A short guide on how computers can "understand" the meaning of text %0a%3c %0a%3c [[#summaryends]]%0a%3c %0a%3c ----%0a%3c [[#content]]%0a%3c %0a%3c %0a%3c Natural Language Processing is defined as a “subfield of Computer Science and Artificial Intelligence concerned with the interactions between computers and human language, in particular how to program computers to process and analyze large amounts of natural language data”. By using Natural Language Processing, computers are able to “understand” and categorize human text and audio. The meaning can be extracted from a sentence after it goes through various layers of analysis. In order these stages of analysis are: morphology, syntax, semantics, and pragmatics. %0a%3c %0a%3c In order to crack the meaning of a sentence, we must first understand the structure of the sentence and the words that compose it with morphology and syntax analysis. The morphological stage of analysis requires identifying morphemes like prefixes/suffixes, singularization/pluralization, inflection/lemmatization, and spell-checking. While morphological analysis is done at the word level, syntactical analysis is done at the sentence level. A common tool to help with this are parse trees: ordered trees used to represent the syntactic structure of a sentence. Parse trees can be broken up into two main categories: constituency-based and dependency-based. The main difference between the two is that constituency-based parse trees distinguish between terminal and non-terminal grammar while dependency-based parse trees do not. Non-terminals are similar to categories like “greeting, name, surname”, but terminals are what goes in those categories like “hi, John, Doe”. %0a%3c %0a%3c Here’s a picture to illustrate the difference between terminal and non-terminal! :) %0a%3c https://i.stack.imgur.com/fsTgs.png%0a%3c %0a%3c After learning about sentence and word structure, we can begin to extract the meaning of a sentence with semantics and pragmatics. Some tasks that have to be performed in the semantic layer of analysis include Named-Entity Recognition (NER) and Relationship Extraction. NER aims to classify named entities into predefined categories such as person names, organizations, and locations. Relationship Extraction is about finding semantic similarity between words (i.e. car is related to road, bus, and driving). At the pragmatic level, we’re trying to comprehend the entire text. Some subfields of pragmatic analysis include topic modeling, summarization, questions and answering. %0a%3c %0a%3c Sources: %0a%3c https://towardsdatascience.com/linguistic-knowledge-in-natural-language-processing-332630f43ce1%0a%3c %0a%3c https://en.wikipedia.org/wiki/Parse_tree%0a%3c https://en.wikipedia.org/wiki/Named-entity_recognition%0a%3c %0a%3c https://en.wikipedia.org/wiki/Natural_language_processing#:~:text=Natural%2520language%2520processing%2520(NLP)%2520is,amounts%2520of%2520natural%2520language%2520data.%0a%3c %0a%3c %0a%3c %0a%3c [[#contentends]]%0a%3c ----%0a%3c ----%0a%3c %0a%3c !!Expansions:%0a%3c [[#expansions]]%0a%3c %0a%3c [[#expansionsend]]%0a%3c %0a%3c ----%0a%3c %25red%25 '''Add an expansion:'''%0a%3c %0a%3c (:if [ exists GradebookExpansions.{$Name}-{$Author} || equal {$Author} {$:Author} ] :)%0a%3c %0a%3c (:else:)%0a%3c %0a%3c (:foxform Site.FoxForms#newexpansion:)%0a%3c %0a%3c (:ifend:)%0a%3c %0a%3c ----%0a%3c ----%0a%3c %0a%3c !!Comments%0a%3c %0a%3c %0a%3c %0a%3c (:section: C:)%0a%3c (:Category: Varia:)%0a\ No newline at end of file%0a
host:1617555568=69.243.178.22
